@startuml

abstract UObject
abstract AActor
abstract APawn
abstract ACharacter
class AAlsCharacter
class ASwgcCharacter

interface IAbilitySystemInterface
interface IGameplayCueInterface
interface IGameplayTagAssetInterface
interface ILyraTeamAgentInterface

UObject <|-- AActor
AActor <|-- APawn
APawn <|-- ACharacter
ACharacter <|-- AAlsCharacter
AAlsCharacter <|-- ASwgcCharacter

IAbilitySystemInterface *-- ASwgcCharacter
IGameplayCueInterface *-- ASwgcCharacter
IGameplayTagAssetInterface *-- ASwgcCharacter
ILyraTeamAgentInterface *-- ASwgcCharacter

class ASwgcCharacter {
    + ASwgcCharacter()

    - ULyraPawnExtensionComponent* PawnExtComponent
    - ULyraHealthComponent* HealthComponent
    - TObjectPtr<UAlsCameraComponent> AlsCamera
    - FGenericTeamId MyTeamID
    - FOnLyraTeamIndexChangedDelegate OnTeamChangedDelegate

    -- PUBLIC --
        + GetLyraPlayerController(): ALyraPlayerController*
        + GetLyraPlayerState(): ALyraPlayerState*
        + GetLyraAbilitySystemComponent(): ALyraAbilitySystemComponent*

    ..IAbilitySystemInterface..
        + GetAbilitySystemComponent(): UAbilitySystemComponent*

    ..IGameplayTagAssetInterface..
        + GetOwnedGameplayTags(FGameplayTagContainer& TagContainer): void
        + HasMatchingGameplayTag(FGameplayTag TagToCheck): bool
        + HasAllMatchingGameplayTags(const FGameplayTagContainer& TagContainer): bool
        + HasAnyMatchingGameplayTags(const FGameplayTagContainer& TagContainer): bool
        
        + ToggleCrouch(): void
    ..AActor..
        + PreInitializeComponents(): void;
        + BeginPlay(): void;
        + EndPlay(const EEndPlayReason::Type EndPlayReason): void;
        + Reset(): void;
        + GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps): void;
        
    ..APawn..
        + NotifyControllerChanged(): void

    ..ILyraTeamAgentInterface..
        + SetGenericTeamId(FGenericTeamId& NewTeamID);
        + GetGenericTeamId(): FGenericTeamId;
        + GetOnTeamIndexChangedDelegate(): FOnLyraTeamIndexChangedDelegate*;

    --PROTECTED--
        # OnAbilitySystemInitialized(): void
        # OnAbilitySystemUninitialized(): void

        # PossessedBy(AController* NewController): void
        # UnPossessed(): void

        # OnRep_Controller(): void
        # OnRep_PlayerState(): void

        # SetupPlayerInputComponent(UInputComponent* PlayerInputComponent): void

        # InitializeGameplayTags(): void

        # FellOutOfWorld(UDamageType& dmgType): void
        # OnDeathStarted(AActor* OwningActor): void

        # OnDeathFinished(AActor* OwningActor): void

        # DisableMovementAndCollision(): void
        # DestroyDueToDeath(): void
        # UninitAndDestroy(): void

        # K2_OnDeathFinished(): void

        # OnMovementModeChanged(EMovementMode PrevMovementMode, uint8 PreviousCustomMode): void
        # SetMovementModeTag(EMovementMode MovementMode, uint8 CustomMovementMode, bool bTagEnabled): void

        # OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust): void
        # OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust): void

        # CanJumpInternal_Implementation(): bool
}

@enduml